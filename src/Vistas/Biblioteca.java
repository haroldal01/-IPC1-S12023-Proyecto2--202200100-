
package Vistas;

import datos.Doble;
import datos.ListaDoble;
import datos.NewMain;
import datos.UsuarioNodo;
import java.awt.Dimension;
import java.io.File;
import javax.swing.*;
import java.util.ArrayList; 
import javax.swing.table.DefaultTableModel;
import javax.swing.JComboBox;
import vistas.Categoria; 



public class Biblioteca extends javax.swing.JFrame {
Doble componente;

//private JComboBox<String> categoriaComboBox; 
ListaDoble listaa = new ListaDoble(); 


String elemento; 

private ArrayList<String> categorias = new ArrayList<String>();
//private JTable categoriastbl;



private UsuarioNodo imagenActual; 
    





    public Biblioteca() {
        this.componente = new Doble(listaa);
    
        initComponents();
         this.setLocationRelativeTo(null);
          categorias.add("general"); 
    }
    
    
    
    // funcion para agregar la imagen al jlabel
    public void setImagen(String ruta) {
        ImageIcon imagen = new ImageIcon(ruta);
        limagen.setIcon(imagen);
        limagen.setSize(imagen.getIconWidth(), imagen.getIconHeight());
        limagen.setMaximumSize(new Dimension(500,500));

        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverbtn = new javax.swing.JButton();
        eliminarbtn = new javax.swing.JButton();
        agregarbtn = new javax.swing.JButton();
        antim = new javax.swing.JButton();
        sigim1 = new javax.swing.JButton();
        Jpanel = new javax.swing.JPanel();
        limagen = new javax.swing.JLabel();
        agregar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoriastbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        volverbtn.setText("volver");
        volverbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverbtnActionPerformed(evt);
            }
        });

        eliminarbtn.setText("Eliminar categoría");
        eliminarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarbtnActionPerformed(evt);
            }
        });

        agregarbtn.setText("Agregar categoría");
        agregarbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarbtnActionPerformed(evt);
            }
        });

        antim.setText("<");
        antim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antimActionPerformed(evt);
            }
        });

        sigim1.setText(">");
        sigim1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigim1ActionPerformed(evt);
            }
        });

        Jpanel.setMaximumSize(new java.awt.Dimension(759, 555));

        javax.swing.GroupLayout JpanelLayout = new javax.swing.GroupLayout(Jpanel);
        Jpanel.setLayout(JpanelLayout);
        JpanelLayout.setHorizontalGroup(
            JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelLayout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(limagen)
                .addContainerGap(516, Short.MAX_VALUE))
        );
        JpanelLayout.setVerticalGroup(
            JpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelLayout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(limagen)
                .addContainerGap(360, Short.MAX_VALUE))
        );

        agregar.setText("agregar imagen");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar imagen");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        categoriastbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"General"}
            },
            new String [] {
                "Categorías"
            }
        ));
        jScrollPane1.setViewportView(categoriastbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(antim))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(eliminarbtn, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(agregarbtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(eliminar)
                        .addGap(29, 29, 29)
                        .addComponent(agregar)
                        .addGap(212, 212, 212)
                        .addComponent(volverbtn)
                        .addGap(23, 23, 23))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(1099, Short.MAX_VALUE)
                    .addComponent(sigim1)
                    .addGap(13, 13, 13)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(antim, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(182, 182, 182))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(volverbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eliminar)
                            .addComponent(agregar))))
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(agregarbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eliminarbtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(315, Short.MAX_VALUE)
                    .addComponent(sigim1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(248, 248, 248)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        imagenActual = (UsuarioNodo) NewMain.listaDoble.peek();

        // abrir el explorador de archivos
        JFileChooser fileChooser = new JFileChooser();
        // seleccionar la imagen
        int seleccion = fileChooser.showOpenDialog(Jpanel);

        if (seleccion == JFileChooser.APPROVE_OPTION) {
            // Agregar la imagen a la lista
            NewMain.listaDoble.add(fileChooser.getSelectedFile().getAbsolutePath());
            // actualiza nuestro nodo actual al ultimo nodo agregado
            imagenActual = (UsuarioNodo) NewMain.listaDoble.peek();
            // Agregar la imagen al jlabel
            setImagen(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_agregarActionPerformed

    private void sigim1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigim1ActionPerformed
        // si imagen actual es null no hacer nada porque no se han agregado imagenes a la lista doble
        if (imagenActual == null) {
            return;
        }

        // si el nodo actual tiene siguiente se coloca la siguiente
        if (imagenActual.getSiguiente() != null) {
            imagenActual = imagenActual.getSiguiente();
            setImagen((String) imagenActual.getDato());
        }
    }//GEN-LAST:event_sigim1ActionPerformed

    private void antimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antimActionPerformed
        // si imagen actual es null no hacer nada porque no se han agregado imagenes a la lista doble
        if (imagenActual == null) {
            return;
        }
        // si el nodo actual tiene anterior se coloca el anterior
        if (imagenActual.getAnterior() != null) {
            imagenActual = imagenActual.getAnterior();
            setImagen((String) imagenActual.getDato());
        }
    }//GEN-LAST:event_antimActionPerformed
       
    //función para llenar la tabla de las categorías 
    private void mostrarCategorias() {
        DefaultTableModel model = (DefaultTableModel) categoriastbl.getModel();
        model.setRowCount(0);
        for (String categoria : categorias) {
            model.addRow(new Object[]{categoria});
        }
    }
    
    // Función para agregar una imagen a la categoría seleccionada
    private void agregarImagen(String categoria) {
        JFileChooser chooser = new JFileChooser();
        int resultado = chooser.showOpenDialog(null);
            if (resultado == JFileChooser.APPROVE_OPTION) {
                File archivo = chooser.getSelectedFile();
            // Aquí deberías agregar el código para mostrar la imagen en la ventana
            // y también para agregar la ruta del archivo a la categoría seleccionada.
            }
    }
    
    // Manejador de eventos para cuando se selecciona una categoría en la tabla
    private void categoriastblMouseClicked(java.awt.event.MouseEvent evt) {
        int filaSeleccionada = categoriastbl.getSelectedRow();
        if (filaSeleccionada >= 0) {
            String categoriaSeleccionada = (String) categoriastbl.getValueAt(filaSeleccionada, 0);
            agregarImagen(categoriaSeleccionada);
        }
    }

 
    private void agregarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarbtnActionPerformed
    String nombreCategoria = JOptionPane.showInputDialog(null, "Ingrese una categoría", JOptionPane.INFORMATION_MESSAGE);
    
    categorias.add(nombreCategoria);
    
    mostrarCategorias();  
       
    }//GEN-LAST:event_agregarbtnActionPerformed

    private void eliminarbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarbtnActionPerformed
            int filaSeleccionada = categoriastbl.getSelectedRow();
        
        if (filaSeleccionada >= 0) {
        
            DefaultTableModel model = (DefaultTableModel) categoriastbl.getModel();
        
            String categoriaEliminar = (String) model.getValueAt(filaSeleccionada, 0);
        
            categorias.remove(filaSeleccionada);
        
            model.removeRow(filaSeleccionada);
        
            JOptionPane.showMessageDialog(null, "Se eliminó la categoría: " + categoriaEliminar);
        
        } else {
        
        JOptionPane.showMessageDialog(null, "Seleccione una fila para eliminar.");
        }
    }//GEN-LAST:event_eliminarbtnActionPerformed

    private void volverbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverbtnActionPerformed
        VentanaPrincipal vi = new VentanaPrincipal();
        vi.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverbtnActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        // si existe una imagen actual elimina la imagen
        if (imagenActual != null) {
            // elimina la imagen  de la lista doble
            NewMain.listaDoble.delete(imagenActual.getDato());
            // si la imagen actual tiene siguiente se coloca la siguiente
            if (imagenActual.getSiguiente() != null) {
                imagenActual = imagenActual.getSiguiente();
                setImagen((String) imagenActual.getDato());
            } else if (imagenActual.getAnterior() != null) {
                // si la imagen actual no tiene siguiente pero si anterior se coloca la anterior
                imagenActual = imagenActual.getAnterior();
                setImagen((String) imagenActual.getDato());
            } else {
                // si la imagen actual no tiene siguiente ni anterior se coloca null
                imagenActual = null;
                limagen.setIcon(null);
            }

        }
    }//GEN-LAST:event_eliminarActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Biblioteca.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Biblioteca().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Jpanel;
    private javax.swing.JButton agregar;
    private javax.swing.JButton agregarbtn;
    private javax.swing.JButton antim;
    private javax.swing.JTable categoriastbl;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton eliminarbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel limagen;
    private javax.swing.JButton sigim1;
    private javax.swing.JButton volverbtn;
    // End of variables declaration//GEN-END:variables
}
